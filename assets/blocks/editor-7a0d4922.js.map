{"version":3,"sources":["webpack:///./node_modules/classnames/index.js","webpack:///./node_modules/@wpackio/entrypoint/lib/index.js","webpack:///./src/blocks/icons.js","webpack:///./src/blocks/wp_imports.js","webpack:///./src/blocks/button/button-edit.js","webpack:///./src/blocks/button/button-save.js","webpack:///./src/blocks/components/panel-button-settings/index.js","webpack:///./src/blocks/button/button.js","webpack:///./src/blocks/components/image-control/index.js","webpack:///./src/blocks/components/panel-background-settings/index.js","webpack:///./src/blocks/header/header.js","webpack:///./src/blocks/header/call-to-action.js","webpack:///./src/blocks/card/card.js","webpack:///./src/blocks/components/image-upload-placeholder/index.js","webpack:///./src/blocks/card/polaroid.js","webpack:///./src/blocks/card/horizontal.js","webpack:///./src/blocks/tweet-quote/inspect.js","webpack:///./src/blocks/tweet-quote/index.js"],"names":["__WEBPACK_AMD_DEFINE_RESULT__","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","undefined","__webpack_require__","p","window","BrowserLayoutIcon","React","createElement","className","role","focusable","xmlns","viewBox","width","height","fill","d","x","y","cx","cy","r","CardIcon","stroke-width","stroke","stroke-miterlimit","points","TwitterIcon","props","color","registerBlockType","wp","blocks","__","i18n","components","RangeControl","SelectControl","ToggleControl","TextControl","Dashicon","IconButton","PanelBody","Button","Toolbar","BaseControl","RadioControl","TextareaControl","QueryControls","CheckboxControl","FormToggle","editor","InspectorControls","BlockControls","AlignmentToolbar","RichText","URLInput","MediaUpload","PanelColorSettings","BlockAlignmentToolbar","InnerBlocks","element","Fragment","renderToString","lodash","omit","merge","hooks","applyFilters","doAction","addAction","addFilter","data","withSelect","ButtonEdit","_props$className","_props$align","align","_props$size","size","_props$text","text","backgroundColor","_props$borderRadius","borderRadius","_props$isSelected","isSelected","_props$hidden","hidden","_props$onFocus","onFocus","_props$onChange","onChange","style","mainClasses","classnames","concat","data-is-placeholder-visible","isEmpty","tagName","placeholder","value","formattingControls","keepPlaceholderOnFocus","ButtonSave","_props$url","url","Content","href","PanelButtonSettings","buttonHidden","buttonColor","buttonTextColor","buttonSize","buttonBorderRadius","_props$onChangeButton","onChangeButtonHidden","_props$onChangeButton2","onChangeButtonColor","_props$onChangeButton3","onChangeButtonTextColor","_props$onChangeButton4","onChangeButtonSize","_props$onChangeButton5","onChangeButtonBorderRadius","Object","assign","initialOpen","title","colorSettings","label","options","min","max","icon","description","category","keywords","attributes","type","source","selector","attribute","textColor","cornerButtonRadius","design","edit","setAttributes","_props$attributes","defaultEditDesign","button_edit","editDesign","controls","panel_button_settings","buttonHiddenValue","colorValue","newSize","cornerRad","onSubmit","event","preventDefault","save","_props$attributes2","button_save","ImageControl","imageID","imageURL","_ref","id","_props$onRemove","onRemove","_props$allowedTypes","allowedTypes","help","onSelect","render","obj","onClick","src","open","PanelBackgroundSettings","backgroundImageID","backgroundImageURL","backgroundOpacity","fixedBackground","_props$onChangeBackgr","onChangeBackgroundColor","onChangeBackgroundImage","onRemoveBackgroundImage","onChangeBackgroundOpacity","onChangeFixedBackground","image_control","step","checked","supports","subtitle","titleColor","subtitleColor","contentAlign","editable","setState","Math","round","voxels-has-background","voxels-has-background-image","mainStyle","backgroundImage","backgroundAttachment","--voxels-background-color","textAlign","newAlign","panel_background_settings","call_to_action_defineProperty","buttonURL","buttonText","schema","heading","des","headingColor","desColor","marginTop","ImageUploadPlaceholder","_props$render","_props$hasRemove","hasRemove","imageClass","voxels-image-upload-has-image","voxels-image-upload-has-placeholder","ev","stopPropagation","mediaID","mediaURL","image_upload_placeholder","has-image","data-src","taglineColor","compose","withState","Component","Inspector","_this$props","this","hashtags","rows","preview","background","foreground","content","twitterIntent","bubbleColor","bubbleBottomColor","inspect","format","borderTop","tweetAction","encodeURIComponent"],"mappings":"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","file":"blocks/editor-7a0d4922.js","sourcesContent":["/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","\"use strict\";\n\n///<reference types=\"webpack-env\" />\n// We expect __webpack_public_path__ to be present, thanks to webpack\n// We are not using DOM in the typescript library, so let's just hack our way\n// through window\n// tslint:disable-next-line:no-any\n// We would override __webpack_public_path__ only if __WPACKIO__ webpack plugin is set\nif (__WPACKIO__) {\n  __webpack_public_path__ = window[`__wpackIo${__WPACKIO__.appName}${__WPACKIO__.outputPath}`];\n}","/**\n * voxels\n * Premium ultra-fine iconic iconery\n *\n */\nexport const BrowserLayoutIcon = () => {\n  return (\n    <svg className=\"dashicon dashicons-grid-view\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\" width=\"20\" height=\"20\">\n      <path fill=\"#444444\" d=\"M45,45H3c-1.105,0-2-0.895-2-2V5c0-1.105,0.895-2,2-2h42c1.105,0,2,0.895,2,2v38C47,44.105,46.105,45,45,45z \"/>\n      <rect x=\"3\" y=\"10\" fill=\"#FFFFFF\" width=\"42\" height=\"33\"/>\n      <path fill=\"#B3B3B3\" d=\"M41,21H7c-0.553,0-1-0.448-1-1v-6c0-0.552,0.447-1,1-1h34c0.553,0,1,0.448,1,1v6C42,20.552,41.553,21,41,21z M8,19h32v-4H8V19z\"/>\n      <path fill=\"#B3B3B3\" d=\"M13,40H7c-0.553,0-1-0.448-1-1V25c0-0.552,0.447-1,1-1h6c0.553,0,1,0.448,1,1v14C14,39.552,13.553,40,13,40z M8,38h4V26H8V38z\"/>\n      <path fill=\"#B3B3B3\" d=\"M40,40H18c-0.553,0-1-0.448-1-1V25c0-0.552,0.447-1,1-1h22c0.553,0,1,0.448,1,1v14 C41,39.552,40.553,40,40,40z M19,38h20V26H19V38z\"/>\n      <circle fill=\"#E86C60\" cx=\"4.5\" cy=\"6.5\" r=\"1.5\"/>\n      <circle fill=\"#EFD358\" cx=\"9.5\" cy=\"6.5\" r=\"1.5\"/>\n      <circle fill=\"#72C472\" cx=\"14.5\" cy=\"6.5\" r=\"1.5\"/>\n    </svg>\n  )\n}\n\nexport const CardIcon = () => {\n  return (\n    <svg className=\"dashicon dashicons-grid-view\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 64 64\" width=\"20\" height=\"20\">\n      <rect x=\"2\" y=\"2\" width=\"40\" height=\"48\" fill=\"none\" stroke-width=\"2\" stroke=\"#000\" stroke-miterlimit=\"10\"/>\n      <polyline points=\"46.003 16.672 60.852 20.646 49.992 61.218 15.216 51.91\" fill=\"none\" stroke-miterlimit=\"10\" stroke=\"#000\" />\n    </svg>\n  )\n}\n\n\nexport const NotificationIcon = () => {\n  return (\n    <svg  className=\"dashicon\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1024 1024\" width=\"20\" height=\"20\">\n      <path fill=\"none\" stroke=\"#000\" d=\"M512 96c-111.118 0-215.584 43.272-294.156 121.844S96 400.882 96 512s43.272 215.584 121.844 294.156S400.882 928 512 928s215.584-43.272 294.156-121.844S928 623.118 928 512s-43.272-215.584-121.843-294.156S623.118 96 512 96zm0-96c282.77 0 512 229.23 512 512s-229.23 512-512 512S0 794.77 0 512 229.23 0 512 0zm-64 704h128v128H448zm0-512h128v384H448z\" />\n    </svg>\n  )\n}\n\nexport const ButtonIcon = () => {\n  return (\n    <svg className=\"dashicon\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" width=\"20\" height=\"20\" >\n      <path fill=\"none\" stroke=\"#000\" d=\"M0,5.1v9.8h20V5.1H0z M17.8,12.7H2.2V7.3h15.5V12.7z\"/>\n    </svg>\n  )\n}\n\nexport const DividerIcon = () => {\n  return <svg className=\"dashicon\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" width=\"20\" height=\"20\">\n      <path fill=\"none\" stroke=\"#000\" d=\"M4 9h12v2H4V9z\"></path>\n    </svg>\n}\n\nexport const TwitterIcon = (props) => {\n  return <svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\" width={props.width ? props.width : 20} height={props.height ? props.height : 20} >\n      <path fill={props.color ? props.color : \"#fff\"} d=\"M153.62,301.59c94.34,0,145.94-78.16,145.94-145.94,0-2.22,0-4.43-.15-6.63A104.36,104.36,0,0,0,325,122.47a102.38,102.38,0,0,1-29.46,8.07,51.47,51.47,0,0,0,22.55-28.37,102.79,102.79,0,0,1-32.57,12.45,51.34,51.34,0,0,0-87.41,46.78A145.62,145.62,0,0,1,92.4,107.81a51.33,51.33,0,0,0,15.88,68.47A50.91,50.91,0,0,1,85,169.86c0,.21,0,.43,0,.65a51.31,51.31,0,0,0,41.15,50.28,51.21,51.21,0,0,1-23.16.88,51.35,51.35,0,0,0,47.92,35.62,102.92,102.92,0,0,1-63.7,22A104.41,104.41,0,0,1,75,278.55a145.21,145.21,0,0,0,78.62,23\" />\n    </svg>;\n}\n","export const { registerBlockType } = wp.blocks\n\nexport const { __ } = wp.i18n\n\nexport const {\n  RangeControl,\n  SelectControl,\n  TextControl,\n  ToggleControl,\n  Dashicon,\n  IconButton,\n  Button,\n  Toolbar,\n  PanelBody,\n  RadioControl,\n  BaseControl,\n  QueryControls,\n  CheckboxControl,\n  FormToggle,\n  TextareaControl\n} = wp.components;\n\nexport const {\n  InspectorControls,\n  BlockControls,\n  AlignmentToolbar,\n  RichText,\n  URLInput,\n  MediaUpload,\n} = wp.editor.InspectorControls ? wp.editor : wp.blocks;\n\nexport const { PanelColorSettings, BlockAlignmentToolbar, InnerBlocks } = wp.editor;\n\nexport const {\n  Fragment,\n  renderToString\n} = wp.element;\n\nexport const {\n  omit,\n  merge,\n} = lodash;\n\nexport const {\n  doAction,\n  addAction,\n  applyFilters,\n  addFilter,\n} = wp.hooks\n\nexport const {\n  withSelect,\n} = wp.data\n","import classnames from 'classnames'\nimport {\n\t__,\n\tRichText,\n} from './../wp_imports'\n\nfunction ButtonEdit( props ) {\n    const {\n        className = '',\n        align = 'center',\n        size = 'small',\n        color,\n        text = '',\n        backgroundColor,\n        borderRadius = 4,\n        isSelected = null,\n        hidden = '',\n        onFocus = () => {},\n        onChange = () => {},\n    } = props\n\n    const style = {\n        borderRadius: borderRadius + 'px',\n        backgroundColor: backgroundColor ? backgroundColor : undefined,\n    }\n\n    const mainClasses = classnames( [\n        className,\n        'voxels-button',\n        `voxels-button-${align}`,\n        `voxels-button-${size}`,\n    ] )\n    if(!hidden) {\n    return (\n\n        <span\n            className={ mainClasses }\n            style={ style }\n            data-is-placeholder-visible={ RichText.isEmpty( text ) }>\n            <RichText\n                tagName={ 'span' }\n                placeholder={ __( 'Enter Text' ) }\n                value={ text }\n                onChange={ onChange }\n                formattingControls={ [ 'bold', 'italic', 'strikethrough' ] }\n                className={ `voxels-button-inner` }\n                style={ { color } }\n                onFocus={ onFocus }\n                isSelected={ isSelected }\n                keepPlaceholderOnFocus\n            />\n        </span>\n    ) } return null;\n}\n\nexport default ButtonEdit","import classnames from 'classnames'\nimport { RichText } from './../wp_imports'\n\nfunction ButtonSave( props ) {\n    const {\n\t\tclassName = '',\n        align = 'center',\n\t\t\t\tsize = 'normal',\n\t\t\t\thidden = '',\n        url = '', color, text, backgroundColor, borderRadius } = props\n\n\tconst style = {\n\t\tborderRadius: borderRadius + 'px',\n\t\tbackgroundColor: backgroundColor ? backgroundColor : undefined,\n\t}\n\n\tconst mainClasses = classnames( [\n\t\tclassName,\n\t\t'voxels-button',\n\t\t`voxels-button-${align}`,\n\t\t`voxels-button-${size}`,\n\t] )\n\tif(!hidden) {\n\treturn (\n\t\t<div className={ mainClasses } style={ style }>\n\t\t\t<RichText.Content\n\t\t\t\ttagName=\"a\"\n\t\t\t\tclassName={ `voxels-button-inner` }\n\t\t\t\thref={ url }\n\t\t\t\tstyle={ { color } }\n\t\t\t\tvalue={ text }\n\t\t\t/>\n\t\t</div>\n\t);\n\t} return null;\n}\n\nexport default ButtonSave","import {\n  __,\n  Fragment,\n  PanelColorSettings,\n  SelectControl,\n  RangeControl\n} from \"./../../wp_imports\";\n\nfunction PanelButtonSettings(props) {\n  const {\n    buttonHidden,\n    buttonColor,\n    buttonTextColor,\n    buttonSize,\n    buttonBorderRadius,\n    onChangeButtonHidden = () => {},\n    onChangeButtonColor = () => {},\n    onChangeButtonTextColor = () => {},\n    onChangeButtonSize = () => {},\n    onChangeButtonBorderRadius = () => {}\n  } = props;\n\n  return (\n    <Fragment>\n      <PanelColorSettings\n        initialOpen={ false }\n        title={__(\"Button Settings\")}\n        colorSettings={[\n          {\n            value: buttonColor,\n            onChange: onChangeButtonColor,\n            label: __(\"Button Color\")\n          },\n          {\n            value: buttonTextColor,\n            onChange: onChangeButtonTextColor,\n            label: __(\"Text Color\")\n          }\n        ]}\n        {...props}\n      >\n        <SelectControl\n          label={__(\"Hidden\")}\n          value={buttonHidden}\n          options={[\n            { value: \"\", label: __(\"Button visible\") },\n            { value: \"true\", label: __(\"Button hidden\") }\n          ]}\n          onChange={onChangeButtonHidden}\n        />\n        <SelectControl\n          label={__(\"Size\")}\n          value={buttonSize}\n          options={[\n            { value: \"small\", label: __(\"Small\") },\n            { value: \"normal\", label: __(\"Normal\") },\n            { value: \"medium\", label: __(\"Medium\") },\n            { value: \"large\", label: __(\"Large\") }\n          ]}\n          onChange={onChangeButtonSize}\n        />\n        <RangeControl\n          label={__(\"Border Radius\")}\n          value={buttonBorderRadius}\n          min=\"1\"\n          max=\"50\"\n          onChange={onChangeButtonBorderRadius}\n        />\n      </PanelColorSettings>\n    </Fragment>\n  );\n}\n\nexport default PanelButtonSettings;\n","/**\n * BLOCK: Button Block.\n *\n * Registering a basic block with Gutenberg.\n * Simple block, renders and saves the same content without any interactivity.\n */\n\n//  Import CSS.\nimport classnames from 'classnames'\nimport { ButtonIcon } from './../icons'\nimport ButtonEdit from './button-edit'\nimport ButtonSave from './button-save'\nimport PanelButtonSettings from './../components/panel-button-settings'\n\nimport {\n\tregisterBlockType, // Import registerBlockType() from wp.blocks\n\t__,\n\tInspectorControls,\n\tBlockControls,\n\tAlignmentToolbar,\n\tBlockAlignmentToolbar,\n\tPanelColorSettings,\n\tDashicon,\n\tIconButton,\n\tSelectControl,\n\tRangeControl,\n\tURLInput,\n\tPanelBody,\n\tapplyFilters,\n\tFragment,\n\tomit,\n\tmerge,\n} from './../wp_imports'\n\nexport const edit = ( props ) => {\n\n\tconst { isSelected, className, setAttributes } = props;\n\n\tconst { url, text, color, textColor, buttonHidden, size, align, cornerButtonRadius, design } = props.attributes;\n\n\tconst mainClasses = classnames( [\n\t\tclassName,\n\t\t'voxels-button',\n\t] )\n\n\tconst defaultEditDesign = (\n\t\t<ButtonEdit\n\t\tonChange={ (text) => setAttributes( { text } ) }\n\t\tclassName={ mainClasses }\n\t\talign={ align } hidden={''} size={ size } backgroundColor={ color } color={ textColor } text={ text }  borderRadius={ cornerButtonRadius } />\n\t)\n\tconst editDesign = applyFilters( 'tinypixel.designs.button.edit', defaultEditDesign, design, props )\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<BlockControls>\n\t\t\t\t<BlockAlignmentToolbar\n\t\t\t\t\tvalue={ align }\n\t\t\t\t\tonChange={ ( align ) => {\n\t\t\t\t\t\tsetAttributes( { align } );\n\t\t\t\t\t} }\n\t\t\t\t\tcontrols={ [ 'left', 'center', 'right', 'full' ] }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelButtonSettings\n\t\t\t\t\tinitialOpen={ true }\n\t\t\t\t\tbuttonColor={ color }\n\t\t\t\t\tbuttonTextColor={ textColor }\n\t\t\t\t\tbuttonSize={ size }\n\t\t\t\t\tbuttonHidden={buttonHidden}\n\t\t\t\t\tbuttonBorderRadius={ cornerButtonRadius }\n\t\t\t\t\tonChangeButtonHidden={(buttonHiddenValue) => setAttributes({ buttonHidden: buttonHiddenValue } ) }\n\t\t\t\t\tonChangeButtonColor={ ( colorValue ) => setAttributes( { color: colorValue } ) }\n\t\t\t\t\tonChangeButtonTextColor={ ( colorValue ) => setAttributes( { textColor: colorValue } ) }\n\t\t\t\t\tonChangeButtonSize={ ( newSize ) => { setAttributes( { size: newSize } ) } }\n\t\t\t\t\tonChangeButtonBorderRadius={ ( cornerRad ) => setAttributes( { cornerButtonRadius: cornerRad } ) }\n\t\t\t\t/>\n\t\t\t</InspectorControls>\n\t\t\t{ editDesign }\n\t\t\t{ isSelected && (\n\t\t\t\t<form\n\t\t\t\t\tonSubmit={ ( event ) => event.preventDefault() }\n\t\t\t\t\tclassName={ `blocks-button__inline-link` }>\n\t\t\t\t\t<Dashicon icon={ 'admin-links' } />\n\t\t\t\t\t<URLInput\n\t\t\t\t\t\tvalue={ url }\n\t\t\t\t\t\tonChange={ ( value ) => setAttributes( { url: value } ) }\n\t\t\t\t\t/>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\ticon={ 'editor-break' }\n\t\t\t\t\t\tlabel={ __( 'Apply' ) }\n\t\t\t\t\t\ttype={ 'submit' }\n\t\t\t\t\t/>\n\t\t\t\t</form>\n\t\t\t) }\n\t\t</Fragment>\n\t)\n}\n\nexport const save = ( props ) => {\n\n\tconst { className } = props\n\tconst { url, text, align, color, textColor, size, buttonHidden, cornerButtonRadius, design } = props.attributes;\n\n\tconst mainClasses = classnames( [\n\t\tclassName,\n\t\t'voxels-button',\n\t] )\n\n\tconst saved = <ButtonSave hidden={buttonHidden} className={ mainClasses } align={ align } size={ size } url={ url } color={ textColor } text={ text } backgroundColor={ color } borderRadius={ cornerButtonRadius } />;\n  return saved;\n}\n\nexport const schema = {\n\turl: {\n\t\ttype: 'string',\n\t\tsource: 'attribute',\n\t\tselector: 'a',\n\t\tattribute: 'href',\n\t},\n\ttext: {\n\t\tsource: 'html',\n\t\tselector: 'a',\n\t},\n\talign: {\n\t\ttype: 'string',\n\t\tdefault: 'center',\n\t},\n\tbuttonHidden: {\n\t\ttype: 'string',\n\t\tdefault: '',\n\t},\n\tcolor: {\n\t\ttype: 'string',\n\t},\n\ttextColor: {\n\t\ttype: 'string',\n\t\tdefault: '#ffffff',\n\t},\n\tsize: {\n\t\ttype: 'string',\n\t\tdefault: 'normal',\n\t},\n\tcornerButtonRadius: {\n\t\ttype: 'number',\n\t\tdefault: 4,\n\t},\n\tdesign: {\n\t\ttype: 'string',\n\t\tdefault: 'basic',\n\t},\n}\n\n\n/**\n * Register: Gutenberg Block.\n *\n * Registers a new block provided a unique name and an object defining its\n * behavior. Once registered, the block is made editor as an option to any\n * editor interface where blocks are implemented.\n *\n * @param  {string}   name     Block name.\n * @param  {Object}   settings Block settings.\n * @return {?WPBlock}          The block, if it has been successfully\n *                             registered; otherwise `undefined`.\n */\nregisterBlockType( 'voxels/button', {\n\ttitle: __( 'Button' ),\n\ticon: ButtonIcon,\n\tdescription: 'Add a customizable button',\n\tcategory: 'common',\n\tkeywords: [\n\t\t__( 'Button' ),\n\t\t__( 'tinyPixel' ),\n\t],\n\tattributes: schema,\n\tedit,\n\tsave,\n} );\n","import {\n    BaseControl,\n    MediaUpload,\n    Fragment,\n    Dashicon,\n} from './../../wp_imports'\n\nfunction ImageControl( props ) {\n    const {\n        label,\n        imageID,\n        imageURL,\n        onChange = ( { url, id } ) => {},\n        onRemove = () => {},\n        allowedTypes = ['image'],\n        help,\n    } = props\n\n    return (\n        <div className='voxels-image-control'>\n            <BaseControl label={ label } help={ help }>\n                <MediaUpload\n                    onSelect={ onChange }\n                    allowedTypes={ allowedTypes }\n                    value={ imageID }\n                    render={ obj => {\n                        return (\n                            <Fragment>\n                                { imageURL &&\n                                    <div className='voxels-image-preview-wrapper'>\n                                        <button className='voxels-image-preview-remove' onClick={ onRemove }><Dashicon icon='no'/></button>\n                                        <img className='voxels-image-preview' src={ imageURL } onClick={ obj.open } />\n                                    </div>\n                                }\n                                { ! imageURL && <div className='voxels-placeholder' onClick={ obj.open }>\n                                    <svg viewBox=\"0 0 512 376\">\n                                        <path d=\"M0,0v376h512V0H0z M480,344H32V32h448V344z\"/>\n                                        <circle cx=\"409.1\" cy=\"102.9\" r=\"40.9\"/>\n                                        <polygon points=\"480,344 32,344 118.3,179.8 140,191.1 189,113.8 289,226.9 297.9,217.6 315,239.9 341,193.5 393.9,264.7 409,248.8\"/>\n                                    </svg>\n                                </div> }\n                            </Fragment>\n                        )\n                    } }\n                />\n            </BaseControl>\n        </div>\n    )\n}\n\nexport default ImageControl","import ImageControl from '../image-control'\nimport {\n    __,\n    Fragment,\n    PanelColorSettings,\n    RangeControl,\n    ToggleControl,\n} from './../../wp_imports'\n\nfunction PanelBackgroundSettings( props ) {\n\n    const {\n        backgroundColor,\n        backgroundImageID,\n        backgroundImageURL,\n        backgroundOpacity,\n        fixedBackground,\n        onChangeBackgroundColor = () => {},\n        onChangeBackgroundImage, // = ( { url, id } ) => {},\n        onRemoveBackgroundImage, // = () => {},\n        onChangeBackgroundOpacity, // = () => {},\n        onChangeFixedBackground,\n    } = props\n\n    return (\n        <Fragment>\n            <PanelColorSettings\n                initialOpen={ false }\n                title={ __( 'Background Settings' ) }\n                colorSettings={ [\n                    {\n                        value: backgroundColor,\n                        onChange: onChangeBackgroundColor,\n                        label: __( 'Background Color' ),\n                    },\n                ] }\n                { ...props }\n            >\n                { onChangeBackgroundImage && (\n                    <ImageControl\n                        label={ __( 'Background Image' ) }\n                        onRemove={ onRemoveBackgroundImage }\n                        onChange={ onChangeBackgroundImage }\n                        imageID={ backgroundImageID }\n                        imageURL={ backgroundImageURL }\n                        />\n                ) }\n                { onChangeBackgroundOpacity && (\n                    <RangeControl\n                        label={ __( 'Background Image Tint Strength' ) }\n                        value={ backgroundOpacity }\n                        onChange={ onChangeBackgroundOpacity }\n                        min={ 0 }\n                        max={ 10 }\n                        step={ 1 }\n                    />\n                ) }\n                { onChangeFixedBackground && (\n                    <ToggleControl\n                        label={ __( 'Fixed Background' ) }\n                        checked={ fixedBackground }\n                        onChange={ onChangeFixedBackground }\n                    />\n                ) }\n            </PanelColorSettings>\n        </Fragment>\n    )\n}\n\nexport default PanelBackgroundSettings","/**\n * BLOCK: header block\n *\n */\nimport { BrowserLayoutIcon } from '../icons'\nimport PanelButtonSettings from '../components/panel-button-settings'\nimport PanelBackgroundSettings from '../components/panel-background-settings'\n\nimport {\n  registerBlockType,\n  __,\n  IconButton,\n  PanelColorSettings,\n  Dashicon,\n  RangeControl,\n  SelectControl,\n  Toolbar,\n  Button,\n  RichText,\n  AlignmentToolbar,\n  MediaUpload,\n  BlockControls,\n  InspectorControls,\n  PanelBody,\n  URLInput,\n  Fragment,\n} from '../wp_imports.js'\n\nimport classnames from 'classnames'\n\nregisterBlockType('voxels/header', {\n  title: __('Header'),\n  icon: BrowserLayoutIcon,\n  category: 'common',\n  keywords: [\n    __('Advocacy'),\n    __('Tiny Pixel Collective'),\n  ],\n\n  supports: {\n    align: true,\n    align: ['center', 'wide', 'full'],\n  },\n\n  attributes: {\n    title: {\n      source: 'html',\n      selector: 'h2',\n      default: __('Heading Title')\n    },\n    subtitle: {\n      source: 'html',\n      selector: 'p',\n      default: __('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus congue tincidunt nisit ut pretium. Duis blandit, tortor et suscipit tincidunt, dolor metus mattis neque, ac varius magna nibh ac tortor.')\n    },\n    titleColor: {\n      type: 'string',\n      default: '#ffffff',\n    },\n    subtitleColor: {\n      type: 'string',\n      default: '#ffffff',\n    },\n    size: {\n      type: 'string',\n      default: 'normal',\n    },\n    contentAlign: {\n      type: 'string',\n      default: 'center',\n    },\n    backgroundColor: {\n      type: 'string',\n      default: '#000000',\n    },\n    backgroundImageID: {\n      type: 'number',\n    },\n    backgroundImageURL: {\n      type: 'string',\n    },\n    backgroundOpacity: {\n      type: 'number',\n      default: 5,\n    },\n    fixedBackground: {\n      type: 'boolean',\n      default: false,\n    },\n  },\n\n\n  edit: function (props) {\n    const {\n      className,\n      setAttributes,\n      isSelected,\n      editable,\n      setState\n    } = props\n\n    const {\n      size,\n      title,\n      titleColor,\n      subtitle,\n      subtitleColor,\n      contentAlign,\n      backgroundColor,\n      backgroundImageID,\n      backgroundImageURL,\n      backgroundOpacity,\n      fixedBackground,\n    } = props.attributes\n\n    const mainClasses = classnames([\n      className,\n      'voxels-header',\n      'voxels-has-background-opacity-' + (1 * Math.round(backgroundOpacity / 1)),\n    ], {\n        'voxels-has-background': backgroundColor || backgroundImageURL,\n        'voxels-has-background-image': backgroundImageURL,\n      })\n\n    const mainStyle = {\n      'backgroundColor': backgroundColor ? backgroundColor : undefined,\n      'backgroundImage': backgroundImageURL ? `url(${backgroundImageURL})` : undefined,\n      'backgroundAttachment': fixedBackground ? 'fixed' : undefined,\n      '--voxels-background-color': backgroundImageURL ? backgroundColor : undefined,\n      'textAlign': contentAlign ? contentAlign : undefined,\n    }\n\n    return (\n      <Fragment>\n        <BlockControls>\n          <AlignmentToolbar\n            value={contentAlign}\n            onChange={(newAlign) => setAttributes({ contentAlign: newAlign })}\n          />\n        </BlockControls>\n        <InspectorControls>\n          <PanelColorSettings\n            initialOpen={true}\n            title={__('Color Settings')}\n            colorSettings={[\n              {\n                value: titleColor,\n                onChange: (colorValue) => setAttributes({ titleColor: colorValue }),\n                label: __('Title Color'),\n              },\n              {\n                value: subtitleColor,\n                onChange: (colorValue) => setAttributes({ subtitleColor: colorValue }),\n                label: __('Subtitle Color'),\n              },\n            ]}\n          >\n          </PanelColorSettings>\n          <PanelBackgroundSettings\n            initialOpen={true}\n            backgroundColor={backgroundColor}\n            backgroundImageID={backgroundImageID}\n            backgroundImageURL={backgroundImageURL}\n            backgroundOpacity={backgroundOpacity}\n            fixedBackground={fixedBackground}\n            onChangeBackgroundColor={backgroundColor => setAttributes({ backgroundColor })}\n            onChangeBackgroundImage={({ url, id }) => setAttributes({ backgroundImageURL: url, backgroundImageID: id })}\n            onRemoveBackgroundImage={() => { setAttributes({ backgroundImageURL: '', backgroundImageID: 0 }) }}\n            onChangeBackgroundOpacity={backgroundOpacity => setAttributes({ backgroundOpacity })}\n            onChangeFixedBackground={value => setAttributes({ fixedBackground: !!value })}\n          />\n        </InspectorControls>\n        <div className={mainClasses} style={mainStyle}>\n          <div className='voxels-header-wrapper'>\n            <RichText\n              tagName='h2'\n              className='voxels-header-title'\n              placeholder={title.default}\n              value={title}\n              onChange={(value) => setAttributes({ title: value })}\n              style={{\n                textAlign: contentAlign,\n                color: titleColor\n              }}\n            />\n            <RichText\n              tagName='p'\n              className='voxels-header-subtitle'\n              placeholder={subtitle.default}\n              value={subtitle}\n              onChange={(value) => setAttributes({ subtitle: value })}\n              style={{\n                textAlign: contentAlign,\n                color: subtitleColor\n              }}\n            />\n          </div>\n        </div>\n      </Fragment>\n    );\n  },\n\n  save: function (props) {\n    const { className } = props\n    const {\n      size,\n      title,\n      titleColor,\n      subtitle,\n      subtitleColor,\n      contentAlign,\n      backgroundColor,\n      backgroundImageURL,\n      backgroundOpacity,\n      fixedBackground,\n    } = props.attributes\n\n    const mainClasses = classnames([\n      className,\n      'voxels-header',\n      'voxels-has-background-opacity-' + (1 * Math.round(backgroundOpacity / 1)),\n    ], {\n        'voxels-has-background': backgroundColor || backgroundImageURL,\n        'voxels-has-background-image': backgroundImageURL,\n      })\n\n    const mainStyle = {\n      'backgroundColor': backgroundColor ? backgroundColor : undefined,\n      'backgroundImage': backgroundImageURL ? `url(${backgroundImageURL})` : undefined,\n      'backgroundAttachment': fixedBackground ? 'fixed' : undefined,\n      '--voxels-background-color': backgroundImageURL ? backgroundColor : undefined,\n      'textAlign': contentAlign ? contentAlign : undefined,\n    }\n\n    return (\n      <div className={mainClasses} style={mainStyle}>\n        <div className='voxels-header-wrapper'>\n          {!RichText.isEmpty(title) && (\n            <RichText.Content\n              tagName='h2'\n              className='voxels-header-title'\n              style={{ color: titleColor }}\n              value={title}\n            />\n          )}\n          {!RichText.isEmpty(subtitle) && (\n            <RichText.Content\n              tagName='p'\n              className='voxels-header-subtitle'\n              style={{ color: subtitleColor }}\n              value={subtitle}\n            />\n          )}\n        </div>\n      </div>\n    );\n  },\n});\n","/**\n * BLOCK: call-to-action block\n *\n */\nimport { BrowserLayoutIcon } from '../icons'\nimport ButtonEdit from '../button/button-edit'\nimport ButtonSave from '../button/button-save'\nimport PanelButtonSettings from '../components/panel-button-settings'\nimport PanelBackgroundSettings from '../components/panel-background-settings'\n\nimport {\n  registerBlockType,\n  __,\n  IconButton,\n  PanelColorSettings,\n  Dashicon,\n  RangeControl,\n  SelectControl,\n  Toolbar,\n  Button,\n  RichText,\n  AlignmentToolbar,\n  MediaUpload,\n  BlockControls,\n  InspectorControls,\n  PanelBody,\n  URLInput,\n  Fragment,\n} from '../wp_imports.js'\n\nimport classnames from 'classnames'\n\nregisterBlockType('voxels/call-to-action', {\n  title: __('Call to Action'),\n  icon: BrowserLayoutIcon,\n  category: 'common',\n  keywords: [\n    __('Advocacy'),\n    __('Tiny Pixel Collective'),\n  ],\n\n  supports: {\n    align: true,\n    align: ['center', 'wide', 'full'],\n  },\n\n  attributes: {\n    title: {\n      source: 'html',\n      selector: 'h2',\n      default: __('Heading Title')\n    },\n    subtitle: {\n      source: 'html',\n      selector: 'p',\n      default: __('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus congue tincidunt nisit ut pretium. Duis blandit, tortor et suscipit tincidunt, dolor metus mattis neque, ac varius magna nibh ac tortor.')\n    },\n    buttonHidden: {\n      type: 'string',\n      default: '',\n    },\n    buttonURL: {\n      type: 'string',\n      source: 'attribute',\n      selector: '.voxels-button-inner',\n      attribute: 'href',\n    },\n    titleColor: {\n      type: 'string',\n      default: '#ffffff',\n    },\n    subtitleColor: {\n      type: 'string',\n      default: '#ffffff',\n    },\n    buttonText: {\n      source: 'html',\n      selector: '.voxels-button-inner',\n      default: __('Button')\n    },\n    buttonColor: {\n      type: 'string',\n    },\n    buttonTextColor: {\n      type: 'string',\n      default: '#ffffff',\n    },\n    size: {\n      type: 'string',\n      default: 'normal',\n    },\n    cornerButtonRadius: {\n      type: 'number',\n      default: 4,\n    },\n    contentAlign: {\n      type: 'string',\n      default: 'center',\n    },\n    backgroundColor: {\n      type: 'string',\n      default: '#000000',\n    },\n    backgroundImageID: {\n      type: 'number',\n    },\n    backgroundImageURL: {\n      type: 'string',\n    },\n    backgroundOpacity: {\n      type: 'number',\n      default: 5,\n    },\n    fixedBackground: {\n      type: 'boolean',\n      default: false,\n    },\n  },\n\n\n  edit: function (props) {\n    const {\n      className,\n      setAttributes,\n      isSelected,\n      editable,\n      setState\n    } = props\n\n    const {\n      buttonURL,\n      buttonText,\n      buttonColor,\n      buttonTextColor,\n      cornerButtonRadius,\n      buttonHidden,\n      size,\n      title,\n      titleColor,\n      subtitle,\n      subtitleColor,\n      contentAlign,\n      backgroundColor,\n      backgroundImageID,\n      backgroundImageURL,\n      backgroundOpacity,\n      fixedBackground,\n    } = props.attributes\n\n    const mainClasses = classnames([\n      className,\n      'voxels-call-to-action',\n      'voxels-has-background-opacity-' + (1 * Math.round(backgroundOpacity / 1)),\n    ], {\n        'voxels-has-background': backgroundColor || backgroundImageURL,\n        'voxels-has-background-image': backgroundImageURL,\n      })\n\n    const mainStyle = {\n      'backgroundColor': backgroundColor ? backgroundColor : undefined,\n      'backgroundImage': backgroundImageURL ? `url(${backgroundImageURL})` : undefined,\n      'backgroundAttachment': fixedBackground ? 'fixed' : undefined,\n      '--voxels-background-color': backgroundImageURL ? backgroundColor : undefined,\n      'textAlign': contentAlign ? contentAlign : undefined,\n    }\n\n    return (\n      <Fragment>\n        <BlockControls>\n          <AlignmentToolbar\n            value={contentAlign}\n            onChange={(newAlign) => setAttributes({ contentAlign: newAlign })}\n          />\n        </BlockControls>\n        <InspectorControls>\n          <PanelColorSettings\n            initialOpen={true}\n            title={__('Color Settings')}\n            colorSettings={[\n              {\n                value: titleColor,\n                onChange: (colorValue) => setAttributes({ titleColor: colorValue }),\n                label: __('Title Color'),\n              },\n              {\n                value: subtitleColor,\n                onChange: (colorValue) => setAttributes({ subtitleColor: colorValue }),\n                label: __('Subtitle Color'),\n              },\n            ]}\n          >\n          </PanelColorSettings>\n          <PanelBackgroundSettings\n            initialOpen={true}\n            backgroundColor={backgroundColor}\n            backgroundImageID={backgroundImageID}\n            backgroundImageURL={backgroundImageURL}\n            backgroundOpacity={backgroundOpacity}\n            fixedBackground={fixedBackground}\n            onChangeBackgroundColor={backgroundColor => setAttributes({ backgroundColor })}\n            onChangeBackgroundImage={({ url, id }) => setAttributes({ backgroundImageURL: url, backgroundImageID: id })}\n            onRemoveBackgroundImage={() => { setAttributes({ backgroundImageURL: '', backgroundImageID: 0 }) }}\n            onChangeBackgroundOpacity={backgroundOpacity => setAttributes({ backgroundOpacity })}\n            onChangeFixedBackground={value => setAttributes({ fixedBackground: !!value })}\n          />\n          <PanelButtonSettings\n            initialOpen={false}\n            buttonColor={buttonColor}\n            buttonTextColor={buttonTextColor}\n            buttonSize={size}\n            buttonHidden={buttonHidden}\n            buttonBorderRadius={cornerButtonRadius}\n            onChangeButtonHidden={buttonHidden => setAttributes({ buttonHidden }) }\n            onChangeButtonColor={(value) => setAttributes({ buttonColor: value })}\n            onChangeButtonTextColor={(value) => setAttributes({ buttonTextColor: value })}\n            onChangeButtonSize={(value) => { setAttributes({ size: value }) }}\n            onChangeButtonBorderRadius={(value) => setAttributes({ cornerButtonRadius: value })}\n          />\n        </InspectorControls>\n        <div className={mainClasses} style={mainStyle}>\n          <div className='voxels-call-to-action-wrapper'>\n            <RichText\n              tagName='h2'\n              className='voxels-call-to-action-title'\n              placeholder={title.default}\n              value={title}\n              onChange={(value) => setAttributes({ title: value })}\n              style={{\n                textAlign: contentAlign,\n                color: titleColor\n              }}\n            />\n            <RichText\n              tagName='p'\n              className='voxels-call-to-action-subtitle'\n              placeholder={subtitle.default}\n              value={subtitle}\n              onChange={(value) => setAttributes({ subtitle: value })}\n              style={{\n                textAlign: contentAlign,\n                color: subtitleColor\n              }}\n            />\n            {!buttonHidden && (\n            <ButtonEdit hidden={buttonHidden} size={size} align={contentAlign} color={buttonTextColor} backgroundColor={buttonColor} text={buttonText} borderRadius={cornerButtonRadius}\n              onChange={(text) => setAttributes({ buttonText: text })}\n            />\n            )}\n          </div>\n        </div>\n        {isSelected && !buttonHidden && (\n          <form\n            key={'form-link'}\n            onSubmit={(event) => event.preventDefault()}\n            className={`blocks-button__inline-link voxels-button-${contentAlign}`}\n          >\n            <Dashicon icon={'admin-links'} />\n            <URLInput\n              value={buttonURL}\n              onChange={(value) => setAttributes({ buttonURL: value })}\n            />\n            <IconButton\n              icon={'editor-break'}\n              label={__('Apply')}\n              type={'submit'}\n            />\n          </form>\n        )}\n      </Fragment>\n    );\n  },\n\n  save: function (props) {\n    const { className } = props\n    const {\n      buttonURL,\n      buttonText,\n      buttonColor,\n      buttonHidden,\n      buttonTextColor,\n      cornerButtonRadius,\n      size,\n      title,\n      titleColor,\n      subtitle,\n      subtitleColor,\n      contentAlign,\n      backgroundColor,\n      backgroundImageURL,\n      backgroundOpacity,\n      fixedBackground,\n    } = props.attributes\n\n    const mainClasses = classnames([\n      className,\n      'voxels-call-to-action',\n      'voxels-has-background-opacity-' + (1 * Math.round(backgroundOpacity / 1)),\n    ], {\n        'voxels-has-background': backgroundColor || backgroundImageURL,\n        'voxels-has-background-image': backgroundImageURL,\n      })\n\n    const mainStyle = {\n      'backgroundColor': backgroundColor ? backgroundColor : undefined,\n      'backgroundImage': backgroundImageURL ? `url(${backgroundImageURL})` : undefined,\n      'backgroundAttachment': fixedBackground ? 'fixed' : undefined,\n      '--voxels-background-color': backgroundImageURL ? backgroundColor : undefined,\n      'textAlign': contentAlign ? contentAlign : undefined,\n    }\n\n    return (\n      <div className={mainClasses} style={mainStyle}>\n        <div className='voxels-call-to-action-wrapper'>\n          {!RichText.isEmpty(title) && (\n            <RichText.Content\n              tagName='h2'\n              className='voxels-call-to-action-title'\n              style={{ color: titleColor }}\n              value={title}\n            />\n          )}\n          {!RichText.isEmpty(subtitle) && (\n            <RichText.Content\n              tagName='p'\n              className='voxels-call-to-action-subtitle'\n              style={{ color: subtitleColor }}\n              value={subtitle}\n            />\n          )}\n          {buttonText && !!buttonText.length && !buttonHidden && (\n            <ButtonSave hidden={buttonHidden} size={size} url={buttonURL} align={contentAlign} color={buttonTextColor} text={buttonText} backgroundColor={buttonColor} borderRadius={cornerButtonRadius} />\n          )}\n        </div>\n      </div>\n    );\n  },\n});\n","/**\n * BLOCK: Card Block.\n *\n * Registering a basic block with Gutenberg.\n * Simple block, renders and saves the same content without any interactivity.\n */\n\nimport classnames from 'classnames'\nimport { CardIcon } from './../icons'\nimport ButtonEdit from './../button/button-edit'\nimport ButtonSave from './../button/button-save'\nimport PanelButtonSettings from './../components/panel-button-settings'\n\nimport {\n  registerBlockType,\n  __,\n  PanelColorSettings,\n  IconButton,\n  Dashicon,\n  InspectorControls,\n  RichText,\n  BlockControls,\n  AlignmentToolbar,\n  URLInput,\n  Fragment,\n} from './../wp_imports'\n\nexport const edit = (props) => {\n\n  const {\n    isSelected,\n    className,\n    setAttributes\n  } = props;\n\n  const {\n    heading,\n    des,\n    headingColor,\n    desColor,\n    buttonHidden,\n    buttonURL,\n    buttonText,\n    buttonColor,\n    buttonTextColor,\n    size,\n    cornerButtonRadius,\n    contentAlign\n  } = props.attributes;\n\n  const mainClasses = classnames([\n    className,\n    'voxels-card',\n  ])\n\n  return (\n    <Fragment>\n      <BlockControls>\n        <AlignmentToolbar\n          value={contentAlign}\n          onChange={(newAlign) => setAttributes({ contentAlign: newAlign })}\n        />\n      </BlockControls>\n      <InspectorControls>\n        <PanelColorSettings\n          title={__('Text Colors')}\n          colorSettings={[\n            {\n              value: headingColor,\n              onChange: (colorValue) => setAttributes({ headingColor: colorValue }),\n              label: __('Heading Color'),\n            },\n            {\n              value: desColor,\n              onChange: (colorValue) => setAttributes({ desColor: colorValue }),\n              label: __('Description Color'),\n            },\n          ]}\n        >\n        </PanelColorSettings>\n        <PanelButtonSettings\n          initialOpen={false}\n          buttonHidden={buttonHidden}\n          buttonColor={buttonColor}\n          buttonTextColor={buttonTextColor}\n          buttonSize={size}\n          buttonBorderRadius={cornerButtonRadius}\n          onChangeButtonHidden={(value) => setAttributes({buttonHidden: value})}\n          onChangeButtonColor={(value) => setAttributes({ buttonColor: value })}\n          onChangeButtonTextColor={(value) => setAttributes({ buttonTextColor: value })}\n          onChangeButtonSize={(value) => { setAttributes({ size: value }) }}\n          onChangeButtonBorderRadius={(value) => setAttributes({ cornerButtonRadius: value })}\n        />\n      </InspectorControls>\n      <div className={mainClasses}>\n        <RichText\n          tagName={'h4'}\n          value={heading}\n          className={'voxels-card-heading'}\n          onChange={(text) => setAttributes({ heading: text })}\n          style={{\n            color: headingColor,\n            textAlign: contentAlign,\n          }}\n          keepPlaceholderOnFocus\n        />\n        <RichText\n          tagName={'p'}\n          value={des}\n          className={'voxels-card-des'}\n          onChange={(text) => setAttributes({ des: text })}\n          style={{\n            color: desColor,\n            textAlign: contentAlign,\n          }}\n          keepPlaceholderOnFocus\n        />\n          <ButtonEdit hidden={buttonHidden}   size={size} align={contentAlign} color={buttonTextColor} backgroundColor={buttonColor} text={buttonText} borderRadius={cornerButtonRadius}\n            onChange={(text) => setAttributes({ buttonText: text })} />\n      </div>\n      {isSelected && !buttonHidden && (\n        <form\n          onSubmit={(event) => event.preventDefault()}\n          className={`blocks-button__inline-link voxels-button-${contentAlign}`}\n          style={{ marginTop: 10, }}\n        >\n          <Fragment>\n          <Dashicon icon={'admin-links'} />\n          <URLInput\n            value={buttonURL}\n            onChange={(value) => setAttributes({ buttonURL: value })}\n          />\n            <IconButton\n              icon={'editor-break'}\n              label={__('Apply')}\n              type={'submit'}\n            />\n            </Fragment>\n        </form>\n      )}\n    </Fragment>\n  )\n}\n\nexport const save = (props) => {\n\n  const { className } = props\n  const {\n    heading,\n    des,\n    headingColor,\n    desColor,\n    buttonHidden,\n    buttonURL,\n    buttonText,\n    buttonColor,\n    buttonTextColor,\n    size,\n    cornerButtonRadius,\n    contentAlign\n  } = props.attributes;\n\n  const mainClasses = classnames([\n    className,\n    'voxels-card',\n  ])\n\n  return (\n    <div className={mainClasses}>\n      {!RichText.isEmpty(heading) && (\n        <RichText.Content\n          tagName=\"h4\"\n          style={{ color: headingColor, textAlign: contentAlign, }}\n          value={heading}\n        />\n      )}\n      {!RichText.isEmpty(des) && (\n        <RichText.Content\n          tagName=\"p\"\n          className='voxels-card-des'\n          style={{ color: desColor, textAlign: contentAlign }}\n          value={des}\n        />\n      )}\n        <ButtonSave hidden={buttonHidden} size={size} url={buttonURL} align={contentAlign} color={buttonTextColor} text={buttonText} backgroundColor={buttonColor} borderRadius={cornerButtonRadius} />\n    </div>\n  );\n}\n\nconst schema = {\n  heading: {\n    source: 'html',\n    selector: '.voxels-card h4',\n    default: __('Your Headline Here')\n  },\n  des: {\n    source: 'html',\n    selector: '.voxels-card-des',\n    default: __('The Headline concept and buttressing tagline are followed by a brief description. Remember to set an image and BAM! You\\'ve got yourself a card 👏🏽')\n  },\n  headingColor: {\n    type: 'string',\n  },\n  desColor: {\n    type: 'string',\n  },\n  buttonURL: {\n    type: 'string',\n    source: 'attribute',\n    selector: '.voxels-button-inner',\n    attribute: 'href',\n  },\n  buttonText: {\n    source: 'html',\n    selector: '.voxels-button-inner',\n    default: __('Button')\n  },\n  buttonColor: {\n    type: 'string',\n  },\n  buttonTextColor: {\n    type: 'string',\n    default: '#ffffff',\n  },\n  buttonHidden: {\n    type: 'string',\n    default: '',\n  },\n  size: {\n    type: 'string',\n    default: 'normal',\n  },\n  cornerButtonRadius: {\n    type: 'number',\n    default: 4,\n  },\n  contentAlign: {\n    type: 'string',\n    default: 'left',\n  },\n}\n\n/**\n * Register: Gutenberg Block.\n *\n * Registers a new block provided a unique name and an object defining its\n * behavior. Once registered, the block is made editor as an option to any\n * editor interface where blocks are implemented.\n *\n * @param  {string}   name     Block name.\n * @param  {Object}   settings Block settings.\n * @return {?WPBlock}          The block, if it has been successfully\n *                             registered; otherwise `undefined`.\n */\nregisterBlockType('voxels/card', {\n  title: __('Card'),\n  icon: CardIcon,\n  category: 'common',\n  keywords: [\n    __('Card'),\n    __('voxels'),\n  ],\n  attributes: schema,\n  edit,\n  save,\n});\n","import classnames from 'classnames'\nimport {\n\tMediaUpload,\n\tDashicon,\n} from './../../wp_imports'\n\nconst ImageUploadPlaceholder = ( props ) => {\n\n\tconst {\n\t\timageID,\n\t\timageURL,\n\t\tonChange = ( { url, id } ) => {},\n\t\tonRemove = () => {},\n\t\tclassName = '',\n\t\tallowedTypes = ['image'],\n\t\trender = undefined,\n\t\thasRemove = true,\n\t} = props\n\n\tconst imageClass = classnames( [\n\t\tclassName,\n\t\t'voxels-image-upload-placeholder',\n\t], {\n\t\t'voxels-image-upload-has-image': imageURL,\n\t\t'voxels-image-upload-has-placeholder': ! imageURL,\n\t} )\n\n\tconst style = {\n\t\tbackgroundImage: imageURL && ! render ? `url(${imageURL})` : undefined,\n\t}\n\n\treturn (\n\t\t<MediaUpload\n\t\t\tonSelect={ onChange }\n\t\t\tallowedTypes={ allowedTypes }\n\t\t\tvalue={ imageID }\n\t\t\trender={ obj => {\n\t\t\t\tif ( imageURL && render ) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div { ...props } render={ undefined } className={ imageClass } onClick={ obj.open } style={ style } data-is-placeholder-visible={ ! imageURL }>{ render }</div>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\t<div { ...props } className={ imageClass } onClick={ obj.open } style={ style } data-is-placeholder-visible={ ! imageURL }>\n\t\t\t\t\t\t{ imageURL && hasRemove && (\n\t\t\t\t\t\t\t<button className='voxels-image-upload-remove' onClick={ ev => { onRemove(); ev.stopPropagation() } }><Dashicon icon='no'/></button>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t{ ! imageURL && (\n\t\t\t\t\t\t\t<svg viewBox=\"0 0 512 376\">\n\t\t\t\t\t\t\t\t<path d=\"M0,0v376h512V0H0z M480,344H32V32h448V344z\"/>\n\t\t\t\t\t\t\t\t<circle cx=\"409.1\" cy=\"102.9\" r=\"40.9\"/>\n\t\t\t\t\t\t\t\t<polygon points=\"480,344 32,344 118.3,179.8 140,191.1 189,113.8 289,226.9 297.9,217.6 315,239.9 341,193.5 393.9,264.7 409,248.8\"/>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t} }\n\t\t/>\n\t)\n}\n\nexport default ImageUploadPlaceholder","/**\n * BLOCK: Polaroid Block.\n *\n * ♫ Sh-sh-sh-shake you... ♫\n * 🙌🏽 🙌🏽 🙌🏽 🙌🏽 🙌🏽 🙌🏽 🙌🏽 🙌🏽 🙌🏽 🙌🏽\n *\n */\n\nimport classnames from 'classnames'\nimport { CardIcon } from './../icons'\nimport ButtonEdit from './../button/button-edit'\nimport ButtonSave from './../button/button-save'\nimport PanelButtonSettings from './../components/panel-button-settings'\nimport ImageUploadPlaceholder from './../components/image-upload-placeholder'\n\nimport {\n  registerBlockType,\n  __,\n  PanelColorSettings,\n  IconButton,\n  Dashicon,\n  InspectorControls,\n  RichText,\n  BlockControls,\n  AlignmentToolbar,\n  URLInput,\n  Fragment,\n} from './../wp_imports'\n\nexport const edit = (props) => {\n\n  const {\n    isSelected,\n    editable,\n    setState,\n    className,\n    setAttributes\n  } = props;\n\n  const {\n    heading,\n    des,\n    mediaID,\n    mediaURL,\n    headingColor,\n    desColor,\n    buttonURL,\n    buttonText,\n    buttonColor,\n    buttonHidden,\n    buttonTextColor,\n    size,\n    cornerButtonRadius,\n    contentAlign\n  } = props.attributes;\n\n  const mainClasses = classnames([\n    className,\n    'voxels-card',\n  ])\n\n  return (\n    <Fragment>\n      <BlockControls>\n        <AlignmentToolbar\n          value={contentAlign}\n          onChange={(newAlign) => setAttributes({ contentAlign: newAlign })}\n        />\n      </BlockControls>\n      <InspectorControls>\n        <PanelColorSettings\n          title={__('Text Colors')}\n          colorSettings={[\n            {\n              value: headingColor,\n              onChange: (colorValue) => setAttributes({ headingColor: colorValue }),\n              label: __('Heading Color'),\n            },\n            {\n              value: desColor,\n              onChange: (colorValue) => setAttributes({ desColor: colorValue }),\n              label: __('Description Color'),\n            },\n          ]}\n        >\n        </PanelColorSettings>\n        <PanelButtonSettings\n          initialOpen={false}\n          buttonColor={buttonColor}\n          buttonTextColor={buttonTextColor}\n          buttonSize={size}\n          buttonHidden={buttonHidden}\n          buttonBorderRadius={cornerButtonRadius}\n          onChangeButtonHidden = {(value) => setAttributes ({ buttonHidden: value })}\n          onChangeButtonColor={(value) => setAttributes({ buttonColor: value })}\n          onChangeButtonTextColor={(value) => setAttributes({ buttonTextColor: value })}\n          onChangeButtonSize={(value) => { setAttributes({ size: value }) }}\n          onChangeButtonBorderRadius={(value) => setAttributes({ cornerButtonRadius: value })}\n        />\n      </InspectorControls>\n      <div className={mainClasses}>\n        <ImageUploadPlaceholder\n          className='voxels-card-image-container'\n          imageID={mediaID}\n          imageURL={mediaURL}\n          onRemove={() => { setAttributes({ mediaURL: '', mediaID: '' }) }}\n          onChange={({ url, id }) => { setAttributes({ mediaURL: url, mediaID: id }) }}\n        />\n        <RichText\n          tagName={'h4'}\n          value={heading}\n          className={'voxels-card-heading'}\n          onChange={(text) => setAttributes({ heading: text })}\n          style={{\n            color: headingColor,\n            textAlign: contentAlign\n          }}\n          keepPlaceholderOnFocus\n        />\n        <RichText\n          tagName={'p'}\n          value={des}\n          className={'voxels-card-des'}\n          onChange={(text) => setAttributes({ des: text })}\n          style={{\n            color: desColor,\n            textAlign: contentAlign\n          }}\n          keepPlaceholderOnFocus\n        />\n        {!buttonHidden && (\n        <ButtonEdit hidden={buttonHidden} size={size} align={contentAlign} color={buttonTextColor} backgroundColor={buttonColor} text={buttonText} borderRadius={cornerButtonRadius}\n          onChange={(text) => setAttributes({ buttonText: text })}\n        />\n        )}\n      </div>\n      {isSelected && !buttonHidden && (\n        <form\n          onSubmit={(event) => event.preventDefault()}\n          className={`blocks-button__inline-link voxels-button-${contentAlign}`}\n          style={{ marginTop: 10 }}\n        >\n          <Dashicon icon={'admin-links'} />\n          <URLInput\n            value={buttonURL}\n            onChange={(value) => setAttributes({ buttonURL: value })}\n          />\n          <IconButton\n            icon={'editor-break'}\n            label={__('Apply')}\n            type={'submit'}\n          />\n        </form>\n      )}\n    </Fragment>\n  )\n}\n\nexport const save = (props) => {\n\n  const { className } = props\n  const {\n    heading,\n    des,\n    mediaURL,\n    headingColor,\n    desColor,\n    buttonURL,\n    buttonText,\n    buttonColor,\n    buttonHidden,\n    buttonTextColor,\n    size,\n    cornerButtonRadius,\n    contentAlign\n  } = props.attributes;\n\n  const mainClasses = classnames([\n    className,\n    'voxels-card',\n  ], {\n      'has-image': mediaURL,\n    })\n\n  return (\n    <div className={mainClasses}>\n      {mediaURL && <div className=\"voxels-card-image-container\" style={{ backgroundImage: `url(${mediaURL})`, textAlign: contentAlign }} data-src={mediaURL} />}\n      {!RichText.isEmpty(heading) && (\n        <RichText.Content\n          tagName=\"h4\"\n          style={{ color: headingColor, textAlign: contentAlign }}\n          value={heading}\n        />\n      )}\n      {!RichText.isEmpty(des) && (\n        <RichText.Content\n          tagName=\"p\"\n          className='voxels-card-des'\n          style={{ color: desColor, textAlign: contentAlign }}\n          value={des}\n        />\n      )}\n      {buttonText && !!buttonText.length && (\n        <ButtonSave hidden={buttonHidden} size={size} url={buttonURL} align={contentAlign} color={buttonTextColor} text={buttonText} backgroundColor={buttonColor} borderRadius={cornerButtonRadius} />\n      )}\n    </div>\n  );\n}\n\nconst schema = {\n  mediaID: {\n    type: 'number',\n  },\n  mediaURL: {\n    type: 'string',\n    source: 'attribute',\n    selector: '.voxels-card-image-container',\n    attribute: 'data-src',\n  },\n  heading: {\n    source: 'html',\n    selector: '.voxels-card h4',\n    default: __('Your Headline Here')\n  },\n  des: {\n    source: 'html',\n    selector: '.voxels-card-des',\n    default: __('Spectrum designator equarium dignity. Forensia tonne palor, a quastridian nun.')\n  },\n  headingColor: {\n    type: 'string',\n  },\n  desColor: {\n    type: 'string',\n  },\n  buttonURL: {\n    type: 'string',\n    source: 'attribute',\n    selector: '.voxels-button-inner',\n    attribute: 'href',\n  },\n  buttonText: {\n    source: 'html',\n    selector: '.voxels-button-inner',\n    default: __('Button')\n  },\n  buttonHidden: {\n    type: 'string',\n  },\n  buttonColor: {\n    type: 'string',\n  },\n  buttonTextColor: {\n    type: 'string',\n    default: '#ffffff',\n  },\n  size: {\n    type: 'string',\n    default: 'normal',\n  },\n  cornerButtonRadius: {\n    type: 'number',\n    default: 4,\n  },\n  contentAlign: {\n    type: 'string',\n    default: 'left',\n  },\n}\n\n/**\n * Register: Gutenberg Block.\n *\n * Registers a new block provided a unique name and an object defining its\n * behavior. Once registered, the block is made editor as an option to any\n * editor interface where blocks are implemented.\n *\n * @param  {string}   name     Block name.\n * @param  {Object}   settings Block settings.\n * @return {?WPBlock}          The block, if it has been successfully\n *                             registered; otherwise `undefined`.\n */\nregisterBlockType('voxels/polaroid', {\n  title: __('Polaroid'),\n  icon: CardIcon,\n  category: 'common',\n  keywords: [\n    __('voxels'),\n    __('Card'),\n    __('Polaroid'),\n  ],\n  attributes: schema,\n  edit,\n  save,\n});\n","/**\n * BLOCK: Horizontal Photo Card Block.\n *\n * 🌄 Pictures on the left;\n * 🌉 Prose to the right.\n *\n *\n */\n\nimport classnames from 'classnames'\nimport { CardIcon } from './../icons'\nimport ButtonEdit from './../button/button-edit'\nimport ButtonSave from './../button/button-save'\nimport PanelButtonSettings from './../components/panel-button-settings'\nimport ImageUploadPlaceholder from './../components/image-upload-placeholder'\n\nimport {\n  registerBlockType,\n  __,\n  PanelColorSettings,\n  IconButton,\n  Dashicon,\n  InspectorControls,\n  RichText,\n  BlockControls,\n  AlignmentToolbar,\n  URLInput,\n  Fragment,\n} from './../wp_imports'\n\nexport const edit = (props) => {\n\n  const {\n    isSelected,\n    editable,\n    setState,\n    className,\n    setAttributes\n  } = props;\n\n  const {\n    heading,\n    des,\n    mediaID,\n    mediaURL,\n    headingColor,\n    buttonHidden,\n    desColor,\n    buttonURL,\n    buttonText,\n    buttonColor,\n    buttonTextColor,\n    size,\n    cornerButtonRadius,\n    contentAlign\n  } = props.attributes;\n\n  const mainClasses = classnames([\n    className,\n    'voxels-card-horizontal-container voxels-card-horizontal',\n  ])\n\n  return (\n    <Fragment>\n      <BlockControls>\n        <AlignmentToolbar\n          value={contentAlign}\n          onChange={(newAlign) => setAttributes({ contentAlign: newAlign })}\n        />\n      </BlockControls>\n      <InspectorControls>\n        <PanelColorSettings\n          title={__('Text Colors')}\n          colorSettings={[\n            {\n              value: headingColor,\n              onChange: (colorValue) => setAttributes({ headingColor: colorValue }),\n              label: __('Heading Color'),\n            },\n            {\n              value: desColor,\n              onChange: (colorValue) => setAttributes({ desColor: colorValue }),\n              label: __('Description Color'),\n            },\n          ]}\n        >\n        </PanelColorSettings>\n        <PanelButtonSettings\n          initialOpen={false}\n          buttonHidden={buttonHidden}\n          buttonColor={buttonColor}\n          buttonTextColor={buttonTextColor}\n          buttonSize={size}\n          buttonBorderRadius={cornerButtonRadius}\n          onChangeButtonHidden={(value) => setAttributes({buttonHidden: value})}\n          onChangeButtonColor={(value) => setAttributes({ buttonColor: value })}\n          onChangeButtonTextColor={(value) => setAttributes({ buttonTextColor: value })}\n          onChangeButtonSize={(value) => { setAttributes({ size: value }) }}\n          onChangeButtonBorderRadius={(value) => setAttributes({ cornerButtonRadius: value })}\n        />\n      </InspectorControls>\n      <div className={mainClasses}>\n        <ImageUploadPlaceholder\n          className='voxels-card-horizontal-image'\n          imageID={mediaID}\n          imageURL={mediaURL}\n          onRemove={() => { setAttributes({ mediaURL: '', mediaID: '' }) }}\n          onChange={({ url, id }) => { setAttributes({ mediaURL: url, mediaID: id }) }}\n        />\n        <div className=\"voxels-card-horizontal-stacked\">\n          <div className=\"voxels-card-horizontal-content\">\n            <RichText\n              tagName={'h4'}\n              value={heading}\n              className={'voxels-card-horizontal-title'}\n              onChange={(text) => setAttributes({ heading: text })}\n              style={{\n                color: headingColor,\n                textAlign: contentAlign\n              }}\n              keepPlaceholderOnFocus\n            />\n            <RichText\n              tagName={'p'}\n              value={des}\n              className={'voxels-card-horizontal-description'}\n              onChange={(text) => setAttributes({ des: text })}\n              style={{\n                color: desColor,\n                textAlign: contentAlign\n              }}\n              keepPlaceholderOnFocus\n            />\n          </div>\n          {!buttonHidden && (\n          <div className=\"voxels-card-horizontal-action\">\n            <ButtonEdit hidden={buttonHidden} size={size} align={contentAlign} color={buttonTextColor} backgroundColor={buttonColor} text={buttonText} borderRadius={cornerButtonRadius}\n              onChange={(text) => setAttributes({ buttonText: text })}\n            />\n          </div>\n          )}\n        </div>\n      </div>\n      {isSelected && !buttonHidden && (\n        <form\n          onSubmit={(event) => event.preventDefault()}\n          className={`blocks-button__inline-link voxels-button-${contentAlign}`}\n          style={{ marginTop: 10 }}\n        >\n          <Dashicon icon={'admin-links'} />\n          <URLInput\n            value={buttonURL}\n            onChange={(value) => setAttributes({ buttonURL: value })}\n          />\n          <IconButton\n            icon={'editor-break'}\n            label={__('Apply')}\n            type={'submit'}\n          />\n        </form>\n      )}\n    </Fragment>\n  )\n}\n\nexport const save = (props) => {\n\n  const { className } = props\n  const {\n    heading,\n    des,\n    mediaURL,\n    mediaID,\n    headingColor,\n    taglineColor,\n    buttonHidden,\n    desColor,\n    buttonURL,\n    buttonText,\n    buttonColor,\n    buttonTextColor,\n    size,\n    cornerButtonRadius,\n    contentAlign\n  } = props.attributes;\n\n  const mainClasses = classnames([\n    className,\n    'voxels-card-horizontal-container voxels-card-horizontal',\n  ])\n\n  return (\n    <div className={mainClasses}>\n      {mediaURL && <div className=\"voxels-card-horizontal-image\" style={{ backgroundImage: `url(${mediaURL})`, textAlign: contentAlign }} data-src={mediaURL} />}\n      <div className=\"voxels-card-horizontal-stacked\">\n        <div className=\"voxels-card-horizontal-content\">\n      {!RichText.isEmpty(heading) && (\n        <RichText.Content\n          tagName=\"h4\"\n          className=\"voxels-card-horizontal-title\"\n          style={{ color: headingColor, textAlign: contentAlign }}\n          value={heading}\n        />\n      )}\n          {!RichText.isEmpty(des) && (\n            <RichText.Content\n              tagName=\"p\"\n              className='voxels-card-horizontal-description'\n              style={{ color: desColor, textAlign: contentAlign }}\n              value={des}\n            />\n          )}\n        </div>\n        {!buttonHidden && (\n        <div className=\"voxels-card-horizontal-action\">\n            <ButtonSave hidden={buttonHidden} size={size} url={buttonURL} align={contentAlign} color={buttonTextColor} text={buttonText} backgroundColor={buttonColor} borderRadius={cornerButtonRadius} />\n        </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst schema = {\n  mediaID: {\n    type: 'number',\n  },\n  mediaURL: {\n    type: 'string',\n    source: 'attribute',\n    selector: '.voxels-card-horizontal-image',\n    attribute: 'data-src',\n  },\n  heading: {\n    source: 'html',\n    selector: '.voxels-card-horizontal h4',\n    default: __('Your Headline Here')\n  },\n  des: {\n    source: 'html',\n    selector: '.voxels-card-horizontal-description',\n    default: __('The Headline concept and buttressing tagline are followed by a brief description. Remember to set an image and BAM! You\\'ve got yourself a card 👏🏽')\n  },\n  headingColor: {\n    type: 'string',\n  },\n  desColor: {\n    type: 'string',\n  },\n  buttonURL: {\n    type: 'string',\n    source: 'attribute',\n    selector: '.voxels-button-inner',\n    attribute: 'href',\n  },\n  buttonHidden: {\n    type: 'string',\n  },\n  buttonText: {\n    source: 'html',\n    selector: '.voxels-button-inner',\n    default: __('Button')\n  },\n  buttonColor: {\n    type: 'string',\n  },\n  buttonTextColor: {\n    type: 'string',\n    default: '#ffffff',\n  },\n  size: {\n    type: 'string',\n    default: 'normal',\n  },\n  cornerButtonRadius: {\n    type: 'number',\n    default: 4,\n  },\n  contentAlign: {\n    type: 'string',\n    default: 'left',\n  },\n}\n\n/**\n * Register: Gutenberg Block.\n *\n * Registers a new block provided a unique name and an object defining its\n * behavior. Once registered, the block is made editor as an option to any\n * editor interface where blocks are implemented.\n *\n * @param  {string}   name     Block name.\n * @param  {Object}   settings Block settings.\n * @return {?WPBlock}          The block, if it has been successfully\n *                             registered; otherwise `undefined`.\n */\nregisterBlockType('voxels/horizontal', {\n  title: __('Horizontal Card'),\n  icon: CardIcon,\n  category: 'common',\n  keywords: [\n    __('voxels'),\n    __('Card'),\n    __('horizontal'),\n  ],\n  attributes: schema,\n  edit,\n  save,\n});\n","import { __,\n      InspectorControls,\n      PanelBody,\n      TextareaControl  } from '../wp_imports';\n\nconst { compose, withState } = wp.compose;\nconst { Component } = wp.element; // ???\n\nclass Inspector extends Component {\n\n  render() {\n\n    const {\n      attributes: { hashtags },\n      setAttributes\n    } = this.props\n\n    return (\n      <InspectorControls>\n\n        <PanelBody title={ __( 'Hashtags', 'voxels' ) }>\n\n          <TextareaControl\n            label={ __( 'Hashtags', 'voxels' ) }\n            help={ __( 'Will be automatically appended to end of tweet', 'voxels' ) }\n\t\t\t\t\t\tonChange={ hashtags => setAttributes( { hashtags } ) }\n            value={ hashtags }\n            rows='2'\n\t\t\t\t\t/>\n        </PanelBody>\n\n      </InspectorControls>\n    )\n  }\n}\n\nexport default compose([\n  withState({ preview: false }),\n])(Inspector);\n","import { TwitterIcon } from './../icons'\nimport Inspector from './inspect'\n\nimport classnames from 'classnames'\n\nimport { __,\n      registerBlockType,\n      RichText,\n      Fragment,\n      InspectorControls,\n      PanelColorSettings } from '../wp_imports';\n\nexport default registerBlockType('voxels/click-to-tweet', {\n  title: __('Click to tweet', 'voxels'),\n  description: __('Lets users share content to Twitter', 'voxels'),\n  category: 'common',\n  icon: {\n    background: '#0084b4',\n    foreground: '#FFF',\n    src: <TwitterIcon color='#fff' />\n  },\n  keywords: ['twitter'],\n  attributes: {\n    content: {\n      type: 'string'\n    },\n    hashtags: {\n      type: 'string'\n    },\n    twitterIntent: {\n      type: 'string',\n      default: 'https://twitter.com/intent/tweet?text='\n    },\n    bubbleColor: {\n      type: 'string',\n      default: 'rgb(68, 198, 232)'\n    },\n    bubbleBottomColor: {\n      type: 'string',\n      default: 'rgb(0, 115, 168)'\n    }\n  },\n  edit: props => {\n    const { attributes, className, setAttributes } = props;\n    const { content, bubbleColor, bubbleBottomColor } = attributes;\n\n    return (\n      <Fragment>\n\n        <Inspector {...{ attributes, setAttributes }} />\n        <InspectorControls>\n          <PanelColorSettings\n            title={__(\"Color Settings\")}\n            colorSettings={[\n              {\n                value: bubbleColor,\n                onChange: colorValue =>\n                  setAttributes({ bubbleColor: colorValue }),\n                label: __(\"Top bubble background color\")\n              },\n              {\n                value: bubbleBottomColor,\n                onChange: colorValue =>\n                  setAttributes({ bubbleBottomColor: colorValue }),\n                label: __(\"Bottom bubble background color\")\n              }\n            ]}\n          />\n        </InspectorControls>\n\n        <div className={className}>\n          <RichText\n            tagName=\"div\"\n            format=\"string\"\n            value={content}\n            className={`__content`}\n            onChange={content => setAttributes({ content })}\n            placeholder={\"Your tweetable content\"}\n            style={{ backgroundColor: bubbleColor }}\n          />\n          <footer\n            className={`__footer`}\n            style={{ backgroundColor: bubbleBottomColor }}\n          >\n            <TwitterIcon /> Tweet this\n            <div\n              className={`__footer-triangle`}\n              style={{ borderTop: `20px solid ${bubbleBottomColor}` }}\n            />\n          </footer>\n        </div>\n      </Fragment>\n    );\n  },\n  save: props => {\n    const { attributes, className } = props;\n    const { content, hashtags, bubbleColor, bubbleBottomColor } = attributes;\n\n    let tweetAction =\n      attributes.twitterIntent + encodeURIComponent(attributes.content);\n    attributes.hashtags\n      ? (tweetAction += encodeURIComponent(\" \" + attributes.hashtags))\n      : null;\n\n    return (\n      <div className={className}>\n        <div className={`__content`} style={{ backgroundColor: bubbleColor }}>\n          {content} {hashtags}\n        </div>\n        <footer className={`__footer`} style={{ backgroundColor: bubbleBottomColor }}>\n          <a href={tweetAction}>\n            <TwitterIcon /> Tweet this\n          </a>\n          <div className={`__footer-triangle`} style={{ borderTop: `20px solid ${bubbleBottomColor}` }} />\n        </footer>\n      </div>\n    );\n  }\n});\n"],"sourceRoot":""}